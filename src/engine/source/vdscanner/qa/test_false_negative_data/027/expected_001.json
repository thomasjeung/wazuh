[
    {
        "category": "Packages",
        "condition": "Package less than 6.3.3",
        "description": "In PuTTY 0.68 through 0.80 before 0.81, biased ECDSA nonce generation allows an attacker to recover a user's NIST P-521 secret key via a quick attack in approximately 60 signatures. This is especially important in a scenario where an adversary is able to read messages signed by PuTTY or Pageant. The required set of signed messages may be publicly readable because they are stored in a public Git service that supports use of SSH for commit signing, and the signatures were made by Pageant through an agent-forwarding mechanism. In other words, an adversary may already have enough signature information to compromise a victim's private key, even if there is no further use of vulnerable PuTTY versions. After a key compromise, an adversary may be able to conduct supply-chain attacks on software maintained in Git. A second, independent scenario is that the adversary is an operator of an SSH server to which the victim authenticates (for remote login or file copy), even though this server is not fully trusted by the victim, and the victim uses the same private key forSSH connections to other services operated by other entities. Here, the rogue server operator (who would otherwise have no way to determine the victim's private key) can derive the victim's private key, and then use it for unauthorized access to those other services. If the other services include Git services, then again it may be possible to conduct supply-chain attacks on software maintained in Git. This also affects, for example, FileZilla before 3.67.0, WinSCP before 6.3.3, TortoiseGit before 2.15.0.1, and TortoiseSVN through 1.14.6.",
        "id": "CVE-2024-31497",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 5.9,
            "version": "3.1"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than 5.17.10",
        "description": "WinSCP before 5.17.10 allows remote attackers to execute arbitrary programs when the URL handler encounters a crafted URL that loads session settings. (For example, this is exploitable in a default installation in which WinSCP is the handler for sftp:// URLs.)",
        "id": "CVE-2021-3331",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 10.0,
            "version": "2.0"
        },
        "severity": "High"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.1.3",
        "description": "An issue was discovered in OpenSSH 7.9. Due to the scp implementation being derived from 1983 rcp, the server chooses which files/directories are sent to the client. However, the scp client only performs cursory validation of the object name returned (only directory traversal attacks are prevented). A malicious scp server (or Man-in-The-Middle attacker) can overwrite arbitrary files in the scp client target directory. If recursive operation (-r) is performed, the server can manipulate subdirectories as well (for example, to overwrite the .ssh/authorized_keys file).",
        "id": "CVE-2019-6111",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 5.8,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "In OpenSSH 7.9, due to accepting and displaying arbitrary stderr output from the server, a malicious server (or Man-in-The-Middle attacker) can manipulate the client output, for example to use ANSI control codes to hide additional files being transferred.",
        "id": "CVE-2019-6110",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 4.0,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than 6.2.2",
        "description": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
        "id": "CVE-2023-48795",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 5.9,
            "version": "3.1"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "An issue was discovered in OpenSSH 7.9. Due to missing character encoding in the progress display, a malicious server (or Man-in-The-Middle attacker) can employ crafted object names to manipulate the client output, e.g., by using ANSI control codes to hide additional files being transferred. This affects refresh_progress_meter() in progressmeter.c.",
        "id": "CVE-2019-6109",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 4.0,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "In OpenSSH 7.9, scp.c in the scp client allows remote SSH servers to bypass intended access restrictions via the filename of . or an empty filename. The impact is modifying the permissions of the target directory on the client side.",
        "id": "CVE-2018-20685",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 2.6,
            "version": "2.0"
        },
        "severity": "Low"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13.7",
        "description": "In WinSCP before 5.14 beta, due to missing validation, the scp implementation would accept arbitrary files sent by the server, potentially overwriting unrelated files. This affects TSCPFileSystem::SCPSink in core/ScpFileSystem.cpp.",
        "id": "CVE-2018-20684",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 6.4,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.5.2",
        "description": "WinSCP before 5.5.3, when FTP with TLS is used, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.",
        "id": "CVE-2014-2735",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 5.8,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.1.5",
        "description": "Integer overflow in PuTTY 0.62 and earlier, WinSCP before 5.1.6, and other products that use PuTTY allows remote SSH servers to cause a denial of service (crash) and possibly execute arbitrary code in certain applications that use PuTTY via a negative size value in an RSA key signature during the SSH handshake, which triggers a heap-based buffer overflow.",
        "id": "CVE-2013-4852",
        "item_id": "71beeb61f1459b9df8c29553d1fa2544a98c1676",
        "score": {
            "base": 6.8,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than 6.3.3",
        "description": "In PuTTY 0.68 through 0.80 before 0.81, biased ECDSA nonce generation allows an attacker to recover a user's NIST P-521 secret key via a quick attack in approximately 60 signatures. This is especially important in a scenario where an adversary is able to read messages signed by PuTTY or Pageant. The required set of signed messages may be publicly readable because they are stored in a public Git service that supports use of SSH for commit signing, and the signatures were made by Pageant through an agent-forwarding mechanism. In other words, an adversary may already have enough signature information to compromise a victim's private key, even if there is no further use of vulnerable PuTTY versions. After a key compromise, an adversary may be able to conduct supply-chain attacks on software maintained in Git. A second, independent scenario is that the adversary is an operator of an SSH server to which the victim authenticates (for remote login or file copy), even though this server is not fully trusted by the victim, and the victim uses the same private key forSSH connections to other services operated by other entities. Here, the rogue server operator (who would otherwise have no way to determine the victim's private key) can derive the victim's private key, and then use it for unauthorized access to those other services. If the other services include Git services, then again it may be possible to conduct supply-chain attacks on software maintained in Git. This also affects, for example, FileZilla before 3.67.0, WinSCP before 6.3.3, TortoiseGit before 2.15.0.1, and TortoiseSVN through 1.14.6.",
        "id": "CVE-2024-31497",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 5.9,
            "version": "3.1"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than 5.17.10",
        "description": "WinSCP before 5.17.10 allows remote attackers to execute arbitrary programs when the URL handler encounters a crafted URL that loads session settings. (For example, this is exploitable in a default installation in which WinSCP is the handler for sftp:// URLs.)",
        "id": "CVE-2021-3331",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 10.0,
            "version": "2.0"
        },
        "severity": "High"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.1.3",
        "description": "An issue was discovered in OpenSSH 7.9. Due to the scp implementation being derived from 1983 rcp, the server chooses which files/directories are sent to the client. However, the scp client only performs cursory validation of the object name returned (only directory traversal attacks are prevented). A malicious scp server (or Man-in-The-Middle attacker) can overwrite arbitrary files in the scp client target directory. If recursive operation (-r) is performed, the server can manipulate subdirectories as well (for example, to overwrite the .ssh/authorized_keys file).",
        "id": "CVE-2019-6111",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 5.8,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "In OpenSSH 7.9, due to accepting and displaying arbitrary stderr output from the server, a malicious server (or Man-in-The-Middle attacker) can manipulate the client output, for example to use ANSI control codes to hide additional files being transferred.",
        "id": "CVE-2019-6110",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 4.0,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than 6.2.2",
        "description": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
        "id": "CVE-2023-48795",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 5.9,
            "version": "3.1"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "An issue was discovered in OpenSSH 7.9. Due to missing character encoding in the progress display, a malicious server (or Man-in-The-Middle attacker) can employ crafted object names to manipulate the client output, e.g., by using ANSI control codes to hide additional files being transferred. This affects refresh_progress_meter() in progressmeter.c.",
        "id": "CVE-2019-6109",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 4.0,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13",
        "description": "In OpenSSH 7.9, scp.c in the scp client allows remote SSH servers to bypass intended access restrictions via the filename of . or an empty filename. The impact is modifying the permissions of the target directory on the client side.",
        "id": "CVE-2018-20685",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 2.6,
            "version": "2.0"
        },
        "severity": "Low"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.13.7",
        "description": "In WinSCP before 5.14 beta, due to missing validation, the scp implementation would accept arbitrary files sent by the server, potentially overwriting unrelated files. This affects TSCPFileSystem::SCPSink in core/ScpFileSystem.cpp.",
        "id": "CVE-2018-20684",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 6.4,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.5.2",
        "description": "WinSCP before 5.5.3, when FTP with TLS is used, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.",
        "id": "CVE-2014-2735",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 5.8,
            "version": "2.0"
        },
        "severity": "Medium"
    },
    {
        "category": "Packages",
        "condition": "Package less than or equal to 5.1.5",
        "description": "Integer overflow in PuTTY 0.62 and earlier, WinSCP before 5.1.6, and other products that use PuTTY allows remote SSH servers to cause a denial of service (crash) and possibly execute arbitrary code in certain applications that use PuTTY via a negative size value in an RSA key signature during the SSH handshake, which triggers a heap-based buffer overflow.",
        "id": "CVE-2013-4852",
        "item_id": "f58e2d636bd8ccb286e838d008ed45584b6143c7",
        "score": {
            "base": 6.8,
            "version": "2.0"
        },
        "severity": "Medium"
    }
]
